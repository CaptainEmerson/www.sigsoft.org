<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">Advice in aspect-oriented programming helps programmers modularize
crosscutting concerns by allowing additions and changes to a
program's execution.  However, formal reasoning about the functional
behavior of aspect-oriented programs requires a non-modular,
whole-program search to find applicable advice.
<P>

To allow modular reasoning, we describe a discipline that
categorizes aspects into two sorts: spectators and
assistants. "Spectators" are statically checked to not modify the
behavior of the code they advise; this restriction lets them remain
unseen.  Unlike spectators, "assistants" are not restricted in their
behavior. However, for modular reasoning one must be able to identify
all applicable assistants, hence assistants must be explicitly
accepted by the code they advise.  Besides allowing modular reasoning,
this discipline permits the use of existing idioms, and appears to be
statically verifiable and practical for software development.
<P>
Indeed, expert aspect-oriented programmers seem to use such a discipline.
<P>





</div>
</body>
</html>