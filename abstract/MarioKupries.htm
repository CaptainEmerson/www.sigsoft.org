<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
Multi-agent systems provide new approaches to the interaction, take-over and execution of tasks. With their characteristic features, such as autonomy, mobility or the ability to negotiate, they make great demands on analysis, modeling and development and at the same time open up new fields of application. Here it becomes obvious that the practical application of agent technology is ahead of its engineering substantiation. Analyses of multi-agent systems are of great importance and have a high impact on practical works. The relations between agents are a peculiarity in multi-agent systems. They have to be complex, variant and negotiable. This thesis applies software architecture theory to multi-agent systems. The interactions between agents are granted an explicit modeling status. Building blocks for interactions in multi-agent systems which can be mapped as application-specific interagent connectors onto architectural frames are identified, abstracted, modeled and prefabricated. In the architecture type-based approach, this thesis provides a building block technology for complex, flexible and volatile interactions in agent application systems. The benefit of this thesis consists in elucidating the demands on interagent connections, the analysis and modeling of classes of interagent connectors and their matching assignment to special agents. Complex, heterogeneous building blocks for interagent connections are analyzed, modeled, developed in abstraction levels and prefabricated for application domains of architectural frames from the view of Software Engineering by means of object-oriented techniques. A processing model and a composite connector service are specified for the developed concepts, models, building blocks and processes. The connector service is mapped onto the architecture type-based development environment for agent application systems called  ADE.

</div>
</body>
</html>