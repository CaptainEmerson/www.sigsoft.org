<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
In the early days of programming the concept of subroutines, and
through this software reuse, was invented to spare limited hardware
resources. Since then software systems have become increasingly
complex and developing them would not have been possible without
reusable software elements such as standard libraries and
frameworks. Furthermore, other approaches commonly subsumed under the
umbrella of software reuse such as product lines and design patterns
have become very successful in recent years. However, there are still
no software component markets available that would make buying
software components as simple as buying parts in a do-it-yourself
hardware store and millions of software fragments are still lying
un(re)used in configuration management repositories all over the
world. The literature primarily blames this on the immense effort
required so far to set up and maintain searchable component
repositories and the weak mechanisms available for retrieving
componentsfrom them, resulting in a severe usability problem. In order
to address these issues within this thesis, we developed a proactive
component reuse recommendation system, naturally integrated into
test-first development approaches, which is able to propose
semantically appropriate, reusable components according to the
specification a developer is just working on. We have implemented an
appropriate system as a plugin for the well-known Eclipse IDE and
demonstrated its usefulness by carrying out a case study from a
popular agile development book. Furthermore, we present a precision
analysis for our approach and examples of how components can be
retrieved based on a simplified semantics description in terms of
standard test cases.
</div>
</body>
</html>
