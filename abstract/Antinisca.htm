<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">Over the last decade, research has addressed the importance of integrating quantitative validation in the software development process, in order to meet performance requirements. Performance problems may be so severe that they can require considerable changes at any stage of software life cycle. Especially at the earlier phases inaccurate decisions may imply an expensive rework, possibly involving the overall software system structure.
<P>

The validation and verification of performance requirements is an important task that should be accomplished at any stage of the software life cycle. To this purpose, many approaches have been proposed. Although several of these approaches have been successfully applied, we are still far from considering performance analysis as an integrated activity into software development which effectively supports all phases of the software life cycle. We believe that model-based performance analysis techniques facilitate such an integration, since models represent tools that can be refined during the software life cycle while the development progresses, and also at run time they provide fast and suitable support in dynamic management of the system performance.
<P>

The aim of this thesis is to achieve model-based performance analysis of software architecture of component-based systems. We consider performance models that describe the software system at the architecture level. The thesis deals with the usage of such analysis at two different phases of the software
life cycle: at the design level and at run time. The former, called predictive performance analysis, helps the designers during the software architecture definition step. The latter is used to dynamically manage the performance attributes when the system runs.
<P>

We devise a new predictive performance analysis methodology (approach, etc.) that can be applied at the software architecture level when information on the hardware platform is still missing. 

To evaluate the applicability of existing approach to predictive performance analysis, we apply two existing software performance analysis approaches, one based on Stochastic Process Algebras and one based on the simulation models, to a real telecommunication software system. This study allows us to identify their
suitability to real complex software system and to define the main suitable features an approach to predictive analysis should have to be accepted by software designers. 

We also introduce a framework to cope with the integration of functional and non-functional analyses at the software architecture level. Such a framework allows to deal with inter-relationships between functional and non-functional aspects that would not necessarily emerge from separate analysis. The integration framework is still a working progress and we aim to implement it in the next future.
<P>

Finally, we define a framework to dynamically reconfigure a component-based application in order to manage its performance while it runs. The framework monitors the application performance and, when some problem occurs, it chooses the next configuration for the software system. Such decision is taken on the
basis of feedback provided by the on-line evaluation of performance models of several pre-defined and feasible reconfiguration alternatives.
</div>
</body>
</html>