<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
High quality of complex software at rising cost pressure and dramatically
shorter innovation cycles can only be obtained with systematic and efficient
development processes. Since software development projects are unique
regarding their combination of specific goals and characteristics, providing
 ideal  and universal development processes is no solution for real life.
Instead, effective and efficient software development processes custom-tailored
to a project and based on experience from past projects are required.
Enormous benefits can be gained if quality is considered before a project
starts. This is contrary to industrial practice, where reuse-oriented process
descriptions and, consequently, the possibility for goal-oriented planning,
are normally missing.
<p>
This work presents a methodology for pattern-based planning. The methodology
captures software development processes in the form of re-usable
process patterns. Through the use of goal-oriented selection and efficient
adaptation of suitable process patterns a crucial contribution for achieving
the respective project goals shall be achieved. Techniques used in the framework
of the methodology are (a) the goal-oriented composition of process
patterns, (b) the verification of generated plans versus project goals as well
as (c) the efficient, transformation-based adaptation to project-specific
boundary conditions. The foundation of the methodology is a conceptual
model that defines the elements of the methodology and their relations
among each other as well as their constraints. The adaptation of process
patterns is supported by software tools, which were specifically developed
for the approach. For approved software development processes, process
patterns were modeled and provided in repositories.
<p>
The tool-based adaptation technique was evaluated in the context of two
case studies, where a considerable increase in efficiency could be observed:
Even the more unfavorable case resulted in an effort reduction at a factor of
65 as compared to a manual procedure. With the help of an existence proof
with a real software development process, it is shown that the conceptual
model constitutes one solution approach for the representation of the
required elements.
</div>
</body>
</html>