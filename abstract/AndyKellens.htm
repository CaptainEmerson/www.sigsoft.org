<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
One of the techniques developers use to deal with the inherent
complexity of software systems is to systematically introduce
regularities in the source code of a system. These regularities
express different conventions, idioms and patterns that are used to
communicate the developers design intent or to regulate the
implementation of a particular concern by relying on a proven
solution.  However, since these regularities are neither explicitly
documented in the source code nor are they first-class entities
of the development process, the causal connection between the
regularities and the implementation can be severed during development.
Consequently, changes to either the regularities or the source code
can result in mismatches which might lead to an inconsistent or
incorrect implementation. In this dissertation we advance an approach
that emphasizes this causality between regularities and source code by
turning regularities into an integral and explicit part of the
development process. We attain this integration by offering a
formalism and a methodology which enables the co-design and
co-evolution of regularities and the source code by making the
regularities and the causal connection with the implementation
explicit and verifiable. Furthermore, our approach strives at
maintaining this causal link throughout the development cycle.


</div>
</body>
</html>
