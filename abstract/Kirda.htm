<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">The popularity of computing devices such as Personal Digital
Assistants (PDAs) and mobile phones have been increasingly and these
devices have been getting more powerful every day. Although the latest
PDAs are even able to display frames, it is still important to adapt
the content for these devices in order to provide a satisfactory
surfing experience for users. Web services in the near future will not
only have to support mobile access, but will also have to deal with
other forms of Web access such as voice interfaces. Hence, Web
services will often need to be device-independent and will have
to support different XML Web formats.
<P>

Although much work has been done on providing mobile access to Web
content, the focus has mainly been the adaptation of HTML content to
make it viewable on mobile devices that might have memory and
screen-size limitations. Only a few attempts have been made to date to
integrate device-independence into the design, implementation and
maintenance phases of Web services.
<P>

This dissertation provides solutions to the problem of designing and
implementing interactive, maintainable, device-independent Web
services. It introduces a novel XML/XSL-based design and
implementation technique and a development tool suite to support the
Web developer. The constructed services can be accessed by a wide
range of Web devices such as mobile phones, PDAs with micro HTML
browsers, speech-based Web interfaces and traditional full-fledged
HTML browsers.
<P>

My general thesis is that Web services can effectively be made
device-independent if device-independence support is integrated into
the Web service design, implementation and maintenance phases. I
present an extended model of the traditional Web service life cycle
that takes device-independence support into account and describe the
Device-Independent Web Engineering (DIWE) framework for engineering
device-independent Web services. I introduce the novel concepts of
page splitting, process partitioning and XSL stylesheet
pre-processing.
<P>



</div>
</body>
</html>