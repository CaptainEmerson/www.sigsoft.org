<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
Requirements modeling and analysis is one of the most difficult tasks in the software development process.  Hardware constraints and potentially complex control logic exacerbate this problem for embedded systems development.  While requirements errors can be costly for software systems in general, they can be especially costly for high-assurance or safety-critical embedded systems where failure can have dire consequences.  Therefore, methods for modeling and rigorously analyzing embedded systems requirements have value for developers.
<p>
The ad hoc development approaches currently used in embedded systems lack systematic methods for both modeling and analyzing requirements.  Although the embedded systems community has expressed interest in exploring how object-oriented modeling, specifically the UML, can be used for embedded systems development,  UML lacks a formal semantics, thus precluding rigorous analysis of requirements expressed as UML models.  While formalization of UML enables rigorous analysis of formal models derived from UML diagrams, formalization itself is not sufficient to broaden the community of embedded systems developers who can use formal methods to rigorously analyze requirements.  To enable developers to model and analyze requirements in UML without having to know details of formal models requires a framework and process that takes advantage of a UML formalization yet insulates developers from the formal models produced by such a formalization.
<p>
This research presents an approach to validating embedded systems requirements modeled as both UML diagrams and LTL properties  using formal verification (e.g., model checking) techniques.  We describe a model development and analysis framework that insulates the developer from formal models and outputs of tools, and an overall model development and analysis process.

</div>
</body>
</html>