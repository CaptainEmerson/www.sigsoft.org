<p>Our daily lives depend more and more on complex software-intensive systems, from entertainment to communications to transportation to medicine. Development organizations of software-intensive systems are paying considerable attention to evolvability, which is defined as the system ability to respond effectively to change.
Improving the evolvability of a software-intensive system is making the system's response to change quick, cost-effective, and predictable. An architectural description is an ideal support for the evolvability of a software-intensive system, because it can expose the dimensions along which a system has evolved and is expected to evolve. Producing up-to-date architectural descriptions in a cost and time effective manner is a challenge for organizations that develop software-intensive systems.
Architectural descriptions do not always reflect the realization of the system due time to market, resource constraint, dynamics of development organization, and more over lack of support.
This thesis contributes to the solution of this problem by devising the support that architects need to produce up-to-date execution views, i.e., architectural descriptions of the runtime structure and behavior of the software embedded in a software-intensive system.
The core contribution of this thesis comprises an architecture reconstruction approach and a strategy to systematically apply and embed the approach in the incremental development of a software-intensive system. The development and validation of these elements have contributed to the state of practice and the state of the art in the software architecture and reverse engineering fields.
Within Philips Healthcare, these elements support the description and improvement of the runtime structure and behavior of the software embedded in the Philips MRI scanner, a representative large and complex software-intensive system. The combination of the approach and the strategy shows a real application of architectural concepts like views and viewpoints, and more over how to recover and organize useful architectural information of complex software-intensive systems.</p>
