<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
Testing is the most important method used to validate a software
product. In general, many different levels of testing are applied in a
software project. Unit testing is normally the first formal test
activity performed in the software life cycle and it occurs during the
implementation phase after a program unit is coded. Unit testing is an
efficient method of detecting and isolating defects in individual
units of code. As unit testing helps in detecting most of the defects
injected during coding, it is critical to ensuring the final quality
of the completed system.
<p>
In object-oriented software, a class or a small collection of classes
is generally chosen to represent a unit for unit testing purposes. In
this thesis we explore some issues relating to the unit testing of
object-oriented systems, using the experimental approach for
validation. Specifically, the thesis makes the following
contributions:

<ol>
<li>Proposes a framework for assessing the effectiveness and the
efficiency of unit testing and applies it to evaluate different
coverage criteria.

<li>Experimentally evaluates whether Test-Driven Development (TDD), in
which unit tests are written before coding, is helpful.

<li>Experimentally evaluates how to combine unit testing with code
inspection to improve the effectiveness and the efficiency of the
overall verification and validation activities at unit level.

<li>Proposes an approach to generate automated unit test cases from
class specifications and applies it on a set of test-programs to judge
its effectiveness.
</ol>
</div>
</body>
</html>