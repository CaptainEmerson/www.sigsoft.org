<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
Software systems are always changing to address new stakeholders
concerns. Design modularity improves the stability of software by
decoupling design concerns that are likely to change so that they can
be maintained independently. Despite the efforts of modern programming
languages, some concerns cannot be well modularised in the system
design and implementation. These concerns, called crosscutting
concerns, are often blamed to hinder design modularity and
stability. However, recent studies have pointed out that crosscutting
concerns are not always harmful to design stability. Hence, software
maintainers would benefit from well documented patterns of
crosscutting concerns and a better understanding about their actual
impact on design stability. This document presents a catalogue of
crosscutting patterns empirically observed in several software
systems. These patterns are described and classified based on an
intuitive vocabulary that facilitates their recognition by software
engineers. Crosscutting patterns are detected by a heuristic
assessment technique composed of metrics and heuristic rules. We also
proposed a formalism to define the crosscutting patterns and their
means of detection. This formalism includes a measurement framework
and a meta-model of the concern realisation. The heuristic assessment
technique is supported by a prototype tool which automates the
detection of crosscutting patterns in software designs. The accuracy
of the heuristic technique is assessed through their application to
seven systems. Then, we select three of these systems to empirically
evaluate the correlation of crosscutting patterns and design
stability. The outcomes of our exploratory evaluation indicate that:
(i) a high number of crosscutting patterns in a module leads to module
instabilities, and (ii) certain specific categories of crosscutting
patterns seem to be good indicators of design instabilities.  

</div>
</body> </html>
