<p>Context is often considered as a source for system change and variation. But the term  context  has been typically used to mean the act of setting boundaries and setting system scope in software engineering. In this thesis, I challenge this view by suggesting that context should be applied to imply system variation on all levels of software (system) development. It constitutes as a more complex phenomena of how the system interacts with the world. The suggested approach synthesises context in terms of influence and perception through 'context states'.</p>

<p>Context states are represented by a sixteen context state matrix, I refer to as The Context Dynamics Matrix (CDM). Context states are the result of two dimensions of context, perception on the x-axis, and influence on the y-axis. Analysts may identify context of a system using the CDM when they identify the influence that an element exerts and assign their perception of how they identified the influence. Each of the influence and perception dimensions is modelled using one model.
First, the force model of influence, which identifies four levels of influence that an element may apply, each level showing a different implication on variation. Second, the knowledge model for perception, which shows five sources of knowledge about the influence. Accordingly, an analyst may describe the context of a system by matching the level of influence with the level of perception to obtain the context state of a given system element.
A context state may imply a high or low level of variability, and a high or low level of perception. The use of context states is independent from any modelling view of a system that either describes functionality or system structure. Because context states describe the context of a system independently from the level or view in which they are described, it is possible to map the context states to enrich the description of a given view.
Accordingly, I show how to map a context state to a functional description of a system by assigning a context state to Data Flow Diagram (DFD) element. Each process and data flow is assigned a context state that enriches its description of the system, in terms of levels of variation that the system's context may imply.
A proof-of-concept is provided to demonstrate how to apply context states to the analysis of the requirements of a system from industry. The results of the study show the viability of using context states to describe the context of systems, and support the argument to experiment further to evaluate the effectiveness of context states in areas of system development not covered by my research.</p>
