<p>Relational Databases (RDBs) are used in most current enterprise environments to store and manage data. While RDBs are well suited to handle large amounts of data, they were not designed to preserve the data semantics. The meaning of the data is implicit at the application level but not explicitly encoded in the relational model. The Semantic Web provides a common framework that allows data to be shared and reused across application, enterprise, and community boundaries. Although developed for the Web, these Semantic Web technologies have proven to be useful in other domains as well, especially if data from different sources has to be exchanged or integrated.
In existing systems, however, it is not always possible or desirable to convert all relational data to RDF as other business-critical applications rely on the relational representation of the data. Adapting or replacing these applications would require a prohibitive migration effort. Therefore, a mediation approach is needed that bridges the conceptual gap between the relational model and RDF, resulting in a cooperative use of the data in RDF-based as well as relational applications. 
In the past, various RDB-to-RDF mediation approaches were explored, resulting in the definition of multiple RDB-to-RDF mappings and algorithms to translate Semantic Web queries to the RDB. However, all of these approaches are limited to read-only data access and have a strong focus on SPARQL for querying and Linked Data for browsing the data as RDF. Use cases where write access to the RDB or support for other data access approaches is needed have so far been neglected by the state-of-the-art RDB-to-RDF mediation approaches.
In this dissertation we present OntoAccess, an RDB-to-RDF mediation approach that enables RDF-based read and write access to an RDB. The approach consists of three parts: (1) the RDB-to-RDF mapping called R3M that provides the basis for RDF-based read and write access to the RDB; (2) algorithms to translate RDF-based read and write requests to the RDB; and (3) an architecture for an extensible RDB-to-RDF mediation that enables support for multiple data access approaches. 
To validate our OntoAccess approach for RDB-to-RDF mediation we provide the following: (1) a formal definition of our RDB-to-RDF mapping R3M and proofs of its bidirectional properties; (2) a performance evaluation of our algorithms for translating DF-based requests to the RDB; (3) a proof of concept implementation of our architecture for an extensible RDB-to-RDF mediation platform; and (4) a case study in the domain of software analysis where we apply OntoAccess to make a data bridge between an RDB-based legacy system and its RDF-based long-term replacement. 
In summary, we therefore state: The OntoAccess approach, consisting of a mapping, an architecture, and algorithms, bridges the conceptual gap between the relational data model and RDF and therefore enables RDF-based read and write access to an RDB.</p>
