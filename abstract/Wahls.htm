<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">  Executable specifications can serve as prototypes of the specified
 system and as oracles for automated testing of implementations,
 and so are more useful than non-executable specifications.    Executable 
 specifications can also be debugged in much the same way as programs,
 allowing errors to be detected and corrected at the specification level
 rather than in later stages of software development.  However, existing
 executable specification languages often force the specifier to work at
 a low level of abstraction, which negates many of the advantages of
 non-executable specifications.  This dissertation shows how to
 execute specifications written at a level of abstraction
 comparable to that found in specifications written in non-executable
 specification languages.  The key innovation is an algorithm for evaluating
 and satisfying first order predicate logic assertions written over abstract
 model types.  This is important because many specification languages use
 such assertions.  Some of the features of this algorithm were inspired
 by techniques from constraint logic programming.
<P>




</div>
</body>
</html>