<p>Software metrics help us to make meaningful estimates for software processes as well as software products and guide us in taking managerial and technical decisions. The most common approach used for software development is the object-oriented approach and mainly two kinds of software metrics exist for object-oriented software - static software metrics and dynamic software metrics. The static software metrics are obtained from static analysis of the software, whereas dynamic software metrics are computed on the basis of data collected during execution of the software. This thesis presents some new static and dynamic software metrics for the measurement of design and complexity of object-oriented software. The research work reported in this thesis is grouped into three categories: - (i) package level metrics, (ii) dynamic metrics, and (iii) cognitive complexity metrics.</p>
<p>To promote reuse in object-oriented systems and to make deployment and maintenance tasks easy, packages in object-oriented systems should follow the basic principles of design i.e. maximum cohesion and minimum coupling. Very few metrics exist in literature to measure these design characteristics at package level and are primitive in nature. In the thesis, new metrics for the measurement of package cohesion and package coupling are proposed. The proposed metrics are validated theoretically as well as empirically in the thesis.</p>
<p>The conventional static metrics have been found to be inadequate for modern object-oriented software due to improper/insufficient contribution of object-oriented features such as polymorphism, dynamic binding, inheritance and unused code towards their measurement. This fact motivated me to focus on dynamic metrics in addition to the traditional static metrics. In this thesis, some new dynamic metrics are proposed for the measurement of cohesion and coupling at run-time. Moreover, different approaches for the dynamic analysis of programs required for collection of run-time data for the measurement of dynamic metrics are discussed and compared. The dynamic cohesion measures are defined on the basis of four types of relationships among elements of an object: - (a) the write dependence of attributes on methods, (b) the read dependence of methods on attributes, (c) the call dependence between methods, and (d) the reference dependence between attributes. The proposed dynamic cohesion metrics are found to be better indicators of change-proneness of classes than the existing cohesion metrics. The dynamic coupling metrics are defined by taking into account all major types of relations: - (a) run-time aggregation relations, (b) run-time inheritance relations, (c) run-time method-attribute reference relations, and (d) run-time method-method invocation relations, between the objects of different classes during measurement. In the empirical study, it is found that average dynamic coupling per class is a useful indicator of the degree of dynamic coupling for a project.</p>
<p>Software maintenance and mainly software comprehension is one of the largest costs in the software lifecycle. This thesis introduces two spatial complexity measures for the comprehension of Java programs, which are based on classes and objects. Further, in the thesis, the existing object-oriented spatial complexity measures are evaluated using standard axiomatic frameworks and most importantly, this thesis presents new object oriented cognitive-spatial complexity metrics, which combine the impact of spatial as well as architectural aspects of the software to compute the software complexity. The proposed metrics are validated using formal evaluation frameworks and are compared with the existing cognitive as well as spatial complexity measures. This study establishes that the proposed metrics are better indicators of the cognitive effort required for software comprehension than the other existing complexity measures for object-oriented software.</p>
