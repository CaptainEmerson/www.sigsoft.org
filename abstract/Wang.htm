<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">The advent and maturation of component-based middleware frameworks have simplified the development of large-scale distributed applications by separating system development and configuration concerns into different aspects that can be specified and composed at various stages of the application development lifecycle.  Conventional component middleware technologies, such as J2EE and .NET, were designed to meet the quality of service (QoS) requirements of enterprise applications, which focus largely on scalability and reliability.  However, conventional component middleware specifications and implementations are not well suited for distributed real-time and embedded (DRE) applications with more stringent QoS requirements, such as low latency/jitter, timeliness, and online fault recovery.
<P>

In the DRE system development community, a new generation of enhanced commercial off-the-shelf (COTS) middleware, such as Real-time CORBA 1.0 (RT-CORBA), is increasingly gaining acceptance as (1) the cost and time required to develop and verify DRE applications increase and (2) implementations of standard COTS middleware specifications mature. Although COTS middleware standardizes mechanisms to configure and control underlying OS supporting mechanisms, it does not yet provide sufficient abstractions to separate QoS policy configurations from application functionality.  Developers are therefore forced to configure QoS policies in an ad hoc way that is hard to configure, validate, modify, and evolve for complex DRE systems consistently.  It is therefore necessary to support QoS systemic concerns modularly in conventional component middleware.
<P>

The research presented in this dissertation is realized in the context of Component-Integrated ACE ORB (CIAO) which is a real-time-enabled implementation of CORBA Component Model (CCM) and provides three contributions to the state of the art in composing systemic behaviors into component middleware frameworks.  First, it illustrates how component middleware can simplify development and evolution of DRE applications while ensuring stringent QoS requirements by composing systemic QoS aspects.  Second, it contributes to the design and implementation of QoS-enabled CCM by analyzing and documenting how systemic behaviors can be composed into component middleware. Finally, it presents empirical and analytical results to demonstrate the effectiveness and the advantage of composing systemic behaviors in component middleware.
<P>



</div>
</body>
</html>