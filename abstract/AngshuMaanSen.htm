<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
A process of software requirements analysis consists of requirement elicitation and requirement description. In requirement elicitation, an analyst collects requirements and information from the stakeholders (various people responsible for the operation, maintenance, development, and also any other people concerned with the software in any form), and prepares a SRS for software development. However to prepare a good quality SRS it is essential to elicit requirements from the stakeholders correctly and completely. Goal oriented requirements engineering methods have gained significance because they define the requirements in terms of goals which are well understood by the stakeholders. Although the goals are extracted from the stakeholders having good domain knowledge, but extracting these goals is a challenging task in the goal oriented methods. To extract the goals, the high level goals are decomposed/refined/broken to get the lower level goals/sub-goals and a guiding model involving active participation of stakeholder is essential for goal decomposition/refinement/splitting.
<p>
This thesis presents multiple perspectives of elicitation of Requirements in Goal Oriented Requirements Engineering (GORE); the principles and benefits of agile software developments and proposes an Agile Technique for Agent Based Goal Elicitation (ATABGE) involving maximum participation of stakeholders for eliciting goals/sub-goals. These goals are elicited by the stakeholders from the high-level goals of the stakeholders through the process of Goal decomposition/ refinement/splitting, involving Agents.
<p>
The methodology is validated through a software tool support which compiles the elicited goals and assigns priority for their further decomposition/refinement/splitting, to elicit the sub-goals. We call it Compilation Algorithm for generation of Activity cards. The analysis and validation of the methodology is discussed with a formative case study of Assam University Examination Branch Automation. The empirical evaluation of the Activity Card Compiler (ACC) used in the ATABGE is presented with the manually compiled results and the outputs generated from the ACC software. We also present the various snapshots of the results and the pseudo code of the algorithm.
</div>
</body>
</html>