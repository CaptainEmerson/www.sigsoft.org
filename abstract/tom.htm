<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>Gschwind Thomas</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
</head>

<body>
<div align="justify">
<p>
Recently, component models have received much attention from the software engineering research community as well as from the industry.  This is apparent through the sheer number of component models that have been developed in the last few years.  The goal of each of these models is to increase reuse and to simplify the implementation and composition of new software.  All these models focus on the specification and packaging of components but provide almost no support for the adaptation and composition of components.  If components have not been written with each other in mind, their composition still has to be carried out programmatically.  Since one of the advantages of software components is independent development, they will rarely be compatible with each other.
<p>
Hence, it is imperative to focus on the adaptation of software components to simplify their composition.  Though many research projects exist in this area, they try to target different aspects of adaptation.  In this thesis, we give an overview of these projects.  While some of these projects support the automated generation of components based on a requirements specification or the automated optimization of a given composition, none of these techniques supports automated adaptation to simplify the composition process itself.
<p>
To solve this problem, we have developed Type-Based Adaptation, a novel adaptation technique that is based on a simple but powerful and efficient formal description of a component, namely its type.  The advantage of type-based adaptation is that almost all of today's component models use strongly typed components and support querying a component's type using reflection or a similar approach.  This allows Type-Based Adaptation to be added transparently to an existing system without having to modify the components for that system.  We provide a reference implementation for different environments to show the feasibility of our approach.
<p>
In this thesis, we will also present our classification of today's adaptation techniques.  Such a classification is important since it allows researchers to put the different approaches in relation to each other and allows developers to select an appropriate adaptation algorithm to solve a given problem.  The classification is based on a series of case studies we have implemented to gain experience with different adaptation and composition approaches.
</div>
</body>
</html>
